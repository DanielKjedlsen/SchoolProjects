test:
    movq $8, %rdx
    movq $8, %rcx
    movq $16, %rdi
    movq $16, %rsi
.LFB1:
    subq $8, %rsp
    movq %r11, (%rsp)
    leaq (%rdi, %rcx, 8), %r8
    jmp .L6
.L7:
    movq %rax, (%rdi)
.L8:
    addq $8, %rdi
    addq $8, %rsi
    addq $8, %rdx
.L6:
    cbbe %r8, %rdi, .L10
    movq (%rsi), %rcx
    movq (%rdx), %rax
    cbge %rax, %rcx, .L7
    movq %rcx, (%rdi)
    jmp .L8
.L10:
    call .LFBO, %r11
    movq (%rsp), %r11
    addq $8, %rsp
    ret %r11
.LFB0:
    subq $8, %rsp
    movq %r11, (%rsp)
    movq $0, %eax
.L2:
    cble %rdx, %rax, .L4
    leaq (%rsi, %rax, 8), %r11
    movq (%r11), %rcx
    movq (%rcx), %rcx
    leaq (%rdi, %rax, 8), %r11
    movq %rcx, (%r11)
    addq $1, %rax
    jmp .L2
.L4:
    call .LFB1, %r11
    movq (%rsp), %r11
    addq $8, %rsp
    ret %r11